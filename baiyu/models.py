from django.db import models

# Create your models here.

class BirdsType(models.Model):
    id = models.AutoField(primary_key=True, verbose_name='序号')
    BirdName = models.CharField(max_length=8,verbose_name='禽类名称')
    Remark = models.CharField(max_length=16,null=True,blank=True,verbose_name='备注')

class CompanyInfo(models.Model):
    id = models.AutoField(primary_key=True, verbose_name='序号')
    companyName = models.CharField(max_length=16,null=True,blank=True,verbose_name='公司名')
    Remark = models.CharField(max_length=16,null=True,blank=True,verbose_name='备注')

class SpeciesInfo(models.Model):
    id = models.AutoField(primary_key=True, verbose_name='序号')
    SpeciesName = models.CharField(max_length=16,verbose_name='品种名')
    BirdType = models.IntegerField(verbose_name='家禽种类')
    Generation = models.IntegerField(verbose_name='代次')
    Remark = models.CharField(max_length=64,null=True,blank=True,verbose_name='备注')

class FeedWay(models.Model):
    id = models.AutoField(primary_key=True, verbose_name='序号')
    feedWayName = models.CharField(max_length=8,verbose_name='饲养方式')
    description = models.CharField(max_length=64,verbose_name='说明')
    remark = models.CharField(max_length=64,null=True,blank=True,verbose_name='备注')

class IntroducedInfo(models.Model):
    id = models.AutoField(primary_key=True, verbose_name='序号')
    Year = models.IntegerField(verbose_name='年份')
    WeekNum = models.IntegerField(verbose_name='周度')
    startDate = models.DateField(verbose_name='开始日期')
    endDate = models.DateField(verbose_name='结束日期')
    RuSheNum = models.BigIntegerField(verbose_name='入舍量')
    LivePeriod = models.IntegerField(verbose_name='生存周期',default=0)
    nGeneration = models.IntegerField(verbose_name='代次')
    nDraftOrOriginal = models.IntegerField(verbose_name='存储类型')
    nBirdsType = models.IntegerField(verbose_name='家禽种类')
    flag = models.IntegerField(verbose_name='计算标志', default=0)
    Remark = models.CharField(max_length=64,null=True,blank=True,verbose_name='备注')


class IntroducedInfoDetail(models.Model):
    id = models.AutoField(primary_key=True, verbose_name='序号')
    Year = models.IntegerField(verbose_name='年份')
    WeekNum = models.IntegerField(verbose_name='周度')
    startDate = models.DateField(verbose_name='开始日期')
    endDate = models.DateField(verbose_name='结束日期')
    CompanyId = models.IntegerField(verbose_name='公司名')
    SpeciesId = models.IntegerField(verbose_name='品种')
    feedWayId = models.IntegerField(verbose_name='饲养方式',default=1)
    RuSheNum = models.IntegerField(verbose_name='入舍量')
    LivePeriod = models.IntegerField(verbose_name='生存周期')
    qzhyFlag = models.IntegerField(verbose_name='是否强制换羽',default=0)
    huanyuRate = models.FloatField(verbose_name='强制换羽比例',default=0)
    qzhyStartWeek = models.IntegerField(verbose_name='强制换羽开始周',default=0)
    HuanyuInterval = models.IntegerField(verbose_name='强制换羽间隙',default=0)   #开始换羽到开始产蛋的空档期
    qzhyPeriod = models.IntegerField(verbose_name='强制换羽周期',default=0)
    nGeneration = models.IntegerField(verbose_name='代次')
    nDraftOrOriginal = models.IntegerField(verbose_name='存储类型')
    nBirdsType = models.IntegerField(verbose_name='家禽种类')
    Remark = models.CharField(max_length=64,null=True,blank=True,verbose_name='备注')

class WeekStandardTable(models.Model):
    id = models.AutoField(primary_key=True, verbose_name='序号')
    WeekNum = models.IntegerField(verbose_name='生产周')
    # SpeciesId = models.IntegerField(verbose_name='品种',default=1)
    # feedWayId = models.IntegerField(verbose_name='饲养方式', default=1)
    siTaoRate = models.FloatField(verbose_name='死淘率')
    ChanDanRate = models.FloatField(verbose_name='产蛋率')
    RuFuZhongDanRate = models.FloatField(verbose_name='入孵种蛋率')
    ShouJingRate = models.FloatField(verbose_name='受精率')
    FuHuaRate = models.FloatField(verbose_name='孵化率')
    JianChuRate = models.FloatField(verbose_name='健雏率')
    SaleRate = models.FloatField(verbose_name='销售率')
    nGeneration = models.IntegerField(verbose_name='代次')
    nBirdsType = models.IntegerField(verbose_name='家禽种类')
    Remark = models.CharField(max_length=64, null=True, blank=True, verbose_name='备注')


class QZHYweekStandardTable(models.Model):
    id = models.AutoField(primary_key=True, verbose_name='序号')
    WeekNum = models.IntegerField(verbose_name='生产周')
    SpeciesId = models.IntegerField(verbose_name='品种',default=1)
    feedWayId = models.IntegerField(verbose_name='饲养方式', default=1)
    siTaoRate = models.FloatField(verbose_name='死淘率')
    ChanDanRate = models.FloatField(verbose_name='产蛋率')
    RuFuZhongDanRate = models.FloatField(verbose_name='入孵种蛋率')
    ShouJingRate = models.FloatField(verbose_name='受精率')
    FuHuaRate = models.FloatField(verbose_name='孵化率')
    nGeneration = models.IntegerField(verbose_name='代次')
    nBirdsType = models.IntegerField(verbose_name='家禽种类')
    Remark = models.CharField(max_length=64, null=True, blank=True, verbose_name='备注')


class LivePeriodTable(models.Model):
    id = models.AutoField(primary_key=True, verbose_name='序号')
    Year = models.IntegerField(verbose_name='年份')
    WeekNum = models.IntegerField(verbose_name='周度')
    startDate = models.DateField(verbose_name='开始日期')
    endDate = models.DateField(verbose_name='结束日期')
    LivePeriod = models.IntegerField(verbose_name='生存周期')
    nGeneration = models.IntegerField(verbose_name='代次')
    nDraftOrOriginal = models.IntegerField(verbose_name='存储类型')
    nBirdsType = models.IntegerField(verbose_name='家禽种类')
    Remark = models.CharField(max_length=64, null=True, blank=True, verbose_name='备注')

class WeeklyCoreTable(models.Model):
    id = models.AutoField(primary_key=True, verbose_name='序号')
    Year = models.IntegerField(verbose_name='年份')
    WeekNum = models.IntegerField(verbose_name='周度')
    startDate = models.DateField(verbose_name='开始日期')
    endDate = models.DateField(verbose_name='结束日期')
    TotalYuChengCunLan = models.BigIntegerField(verbose_name='总育成期存栏')
    TotalChanDanCunLan = models.BigIntegerField(verbose_name='总产蛋期存栏')
    TotalDan = models.BigIntegerField(verbose_name='总产蛋数')
    TotalChuJi = models.BigIntegerField(verbose_name='雏鸡总数')
    TotalFactSaleChuJi = models.BigIntegerField(verbose_name='实际销售雏鸡总数')
    TaoTaiJiNum = models.BigIntegerField(verbose_name='淘汰鸡数目')
    dTaoTaiJiRou = models.BigIntegerField(verbose_name='淘汰鸡肉')
    nGeneration = models.IntegerField(verbose_name='代次')
    nDraftOrOriginal = models.IntegerField(verbose_name='存储类型')
    nBirdsType = models.IntegerField(verbose_name='家禽种类')
    Remark = models.CharField(max_length=64, null=True, blank=True, verbose_name='备注')


class WeeklyStatisticTable(models.Model):
    id = models.AutoField(primary_key=True, verbose_name='序号')
    Year = models.IntegerField(verbose_name='年份')
    WeekNum = models.IntegerField(verbose_name='周度')
    startDate = models.DateField(verbose_name='开始日期')
    endDate = models.DateField(verbose_name='结束日期')
    CunlLanNum35 = models.FloatField(verbose_name='35日龄存栏量')
    CunlLanNum42 = models.FloatField(verbose_name='42日龄存栏量')
    CunlLanNum49 = models.FloatField(verbose_name='49日龄存栏量')
    CunlLanNum56 = models.FloatField(verbose_name='56日龄存栏量')
    ChuLanRouJiNum35 = models.FloatField(verbose_name='35日龄出栏肉鸡数量')
    ChuLanRouJiNum42 = models.FloatField(verbose_name='42日龄出栏肉鸡数量')
    ChuLanRouJiNum49 = models.FloatField(verbose_name='49日龄出栏肉鸡数量')
    ChuLanRouJiNum56 = models.FloatField(verbose_name='56日龄出栏肉鸡数量')
    TotalChuLanRouJiNum = models.FloatField(verbose_name='出栏肉鸡总量')
    HuoZhong35 = models.FloatField(verbose_name='35日龄出栏肉鸡活重')
    HuoZhong42 = models.FloatField(verbose_name='42日龄出栏肉鸡活重')
    HuoZhong49 = models.FloatField(verbose_name='49日龄出栏肉鸡活重')
    HuoZhong56 = models.FloatField(verbose_name='56日龄出栏肉鸡活重')
    TotalHuoZhong = models.FloatField(verbose_name='出栏肉鸡活重总量')
    JiRou35 = models.FloatField(verbose_name='35日龄出栏鸡肉重量')
    JiRou42 = models.FloatField(verbose_name='42日龄出栏鸡肉重量')
    JiRou49 = models.FloatField(verbose_name='49日龄出栏鸡肉重量')
    JiRou56 = models.FloatField(verbose_name='56日龄出栏鸡肉重量')
    TotalJiRou = models.FloatField(verbose_name='出栏鸡肉总重量')
    JiXiong35 = models.FloatField(verbose_name='35日龄出栏鸡胸肉重量')
    JiXiong42 = models.FloatField(verbose_name='42日龄出栏鸡胸肉重量')
    JiXiong49 = models.FloatField(verbose_name='49日龄出栏鸡胸肉重量')
    JiXiong56 = models.FloatField(verbose_name='56日龄出栏鸡胸肉重量')
    TotalJiXiong = models.FloatField(verbose_name='出栏鸡胸肉总重量')
    JiChi35 = models.FloatField(verbose_name='35日龄出栏鸡翅重量')
    JiChi42 = models.FloatField(verbose_name='42日龄出栏鸡翅重量')
    JiChi49 = models.FloatField(verbose_name='49日龄出栏鸡翅重量')
    JiChi56 = models.FloatField(verbose_name='56日龄出栏鸡翅重量')
    TotalJiChi = models.FloatField(verbose_name='出栏鸡翅总重量')
    JiTui35 = models.FloatField(verbose_name='35日龄出栏鸡腿重量')
    JiTui42 = models.FloatField(verbose_name='42日龄出栏鸡腿重量')
    JiTui49 = models.FloatField(verbose_name='49日龄出栏鸡腿重量')
    JiTui56 = models.FloatField(verbose_name='56日龄出栏鸡腿重量')
    TotalJiTui = models.FloatField(verbose_name='出栏鸡腿总重量')
    JiGuJia35 = models.FloatField(verbose_name='35日龄出栏鸡骨架重量')
    JiGuJia42 = models.FloatField(verbose_name='42日龄出栏鸡骨架重量')
    JiGuJia49 = models.FloatField(verbose_name='49日龄出栏鸡骨架重量')
    JiGuJia56 = models.FloatField(verbose_name='56日龄出栏鸡骨架重量')
    TotalJiGuJia = models.FloatField(verbose_name='出栏鸡骨架总重量')
    JiNeiZang35 = models.FloatField(verbose_name='35日龄出栏鸡内脏重量')
    JiNeiZang42 = models.FloatField(verbose_name='42日龄出栏鸡内脏重量')
    JiNeiZang49 = models.FloatField(verbose_name='49日龄出栏鸡内脏重量')
    JiNeiZang56 = models.FloatField(verbose_name='56日龄出栏鸡内脏重量')
    TotalJiNeiZang = models.FloatField(verbose_name='出栏鸡内脏总重量')
    nDraftOrOriginal = models.IntegerField(verbose_name='存储类型')
    nBirdsType = models.IntegerField(verbose_name='家禽种类',default=1)
    Remark = models.CharField(max_length=64, null=True, blank=True, verbose_name='备注')

class WeeklyStatisticDetail(models.Model):
    id = models.AutoField(primary_key=True, verbose_name='序号')
    Year = models.IntegerField(verbose_name='年份')
    WeekNum = models.IntegerField(verbose_name='周度')
    startDate = models.DateField(verbose_name='开始日期')
    endDate = models.DateField(verbose_name='结束日期')
    CunlLanNum35 = models.FloatField(verbose_name='35日龄存栏量')
    CunlLanNum42 = models.FloatField(verbose_name='42日龄存栏量')
    CunlLanNum49 = models.FloatField(verbose_name='49日龄存栏量')
    CunlLanNum56 = models.FloatField(verbose_name='56日龄存栏量')
    ChuLanRouJiNum35 = models.FloatField(verbose_name='35日龄出栏肉鸡数量')
    ChuLanRouJiNum42 = models.FloatField(verbose_name='42日龄出栏肉鸡数量')
    ChuLanRouJiNum49 = models.FloatField(verbose_name='49日龄出栏肉鸡数量')
    ChuLanRouJiNum56 = models.FloatField(verbose_name='56日龄出栏肉鸡数量')
    TotalChuLanRouJiNum = models.FloatField(verbose_name='出栏肉鸡总量')
    HuoZhong35 = models.FloatField(verbose_name='35日龄出栏肉鸡活重')
    HuoZhong42 = models.FloatField(verbose_name='42日龄出栏肉鸡活重')
    HuoZhong49 = models.FloatField(verbose_name='49日龄出栏肉鸡活重')
    HuoZhong56 = models.FloatField(verbose_name='56日龄出栏肉鸡活重')
    TotalHuoZhong = models.FloatField(verbose_name='出栏肉鸡活重总量')
    JiRou35 = models.FloatField(verbose_name='35日龄出栏鸡肉重量')
    JiRou42 = models.FloatField(verbose_name='42日龄出栏鸡肉重量')
    JiRou49 = models.FloatField(verbose_name='49日龄出栏鸡肉重量')
    JiRou56 = models.FloatField(verbose_name='56日龄出栏鸡肉重量')
    TotalJiRou = models.FloatField(verbose_name='出栏鸡肉总重量')
    JiXiong35 = models.FloatField(verbose_name='35日龄出栏鸡胸肉重量')
    JiXiong42 = models.FloatField(verbose_name='42日龄出栏鸡胸肉重量')
    JiXiong49 = models.FloatField(verbose_name='49日龄出栏鸡胸肉重量')
    JiXiong56 = models.FloatField(verbose_name='56日龄出栏鸡胸肉重量')
    TotalJiXiong = models.FloatField(verbose_name='出栏鸡胸肉总重量')
    JiChi35 = models.FloatField(verbose_name='35日龄出栏鸡翅重量')
    JiChi42 = models.FloatField(verbose_name='42日龄出栏鸡翅重量')
    JiChi49 = models.FloatField(verbose_name='49日龄出栏鸡翅重量')
    JiChi56 = models.FloatField(verbose_name='56日龄出栏鸡翅重量')
    TotalJiChi = models.FloatField(verbose_name='出栏鸡翅总重量')
    JiTui35 = models.FloatField(verbose_name='35日龄出栏鸡腿重量')
    JiTui42 = models.FloatField(verbose_name='42日龄出栏鸡腿重量')
    JiTui49 = models.FloatField(verbose_name='49日龄出栏鸡腿重量')
    JiTui56 = models.FloatField(verbose_name='56日龄出栏鸡腿重量')
    TotalJiTui = models.FloatField(verbose_name='出栏鸡腿总重量')
    JiGuJia35 = models.FloatField(verbose_name='35日龄出栏鸡骨架重量')
    JiGuJia42 = models.FloatField(verbose_name='42日龄出栏鸡骨架重量')
    JiGuJia49 = models.FloatField(verbose_name='49日龄出栏鸡骨架重量')
    JiGuJia56 = models.FloatField(verbose_name='56日龄出栏鸡骨架重量')
    TotalJiGuJia = models.FloatField(verbose_name='出栏鸡骨架总重量')
    JiNeiZang35 = models.FloatField(verbose_name='35日龄出栏鸡内脏重量')
    JiNeiZang42 = models.FloatField(verbose_name='42日龄出栏鸡内脏重量')
    JiNeiZang49 = models.FloatField(verbose_name='49日龄出栏鸡内脏重量')
    JiNeiZang56 = models.FloatField(verbose_name='56日龄出栏鸡内脏重量')
    TotalJiNeiZang = models.FloatField(verbose_name='出栏鸡内脏总重量')
    nDraftOrOriginal = models.IntegerField(verbose_name='存储类型')
    nBirdsType = models.IntegerField(verbose_name='家禽种类',default=1)
    Remark = models.CharField(max_length=64, null=True, blank=True, verbose_name='备注')

class YearParameter(models.Model):
    id = models.AutoField(primary_key=True, verbose_name='序号')
    nYear = models.IntegerField(verbose_name='年份',default=2009)
    ChulanQZ35 = models.FloatField(verbose_name='35日龄出栏权重（%）')
    ChulanQZ42 = models.FloatField(verbose_name='42日龄出栏权重（%）')
    ChulanQZ49 = models.FloatField(verbose_name='49日龄出栏权重（%）')
    ChulanQZ56 = models.FloatField(verbose_name='56日龄出栏权重（%）')
    ChuLanTZ35 = models.FloatField(verbose_name='35日龄出栏体重（%）')
    ChuLanTZ42 = models.FloatField(verbose_name='42日龄出栏体重（%）')
    ChuLanTZ49 = models.FloatField(verbose_name='49日龄出栏体重（%）')
    ChuLanTZ56 = models.FloatField(verbose_name='56日龄出栏体重（%）')
    TuZaiRate35 = models.FloatField(verbose_name='35日龄出栏屠宰率（%）')
    TuZaiRate42 = models.FloatField(verbose_name='42日龄出栏屠宰率（%）')
    TuZaiRate49 = models.FloatField(verbose_name='49日龄出栏屠宰率（%）')
    TuZaiRate56 = models.FloatField(verbose_name='56日龄出栏屠宰率（%）')
    JiXiongRate35 = models.FloatField(verbose_name='35日龄出栏鸡胸比例（%）')
    JiXiongRate42 = models.FloatField(verbose_name='42日龄出栏鸡胸比例（%）')
    JiXiongRate49 = models.FloatField(verbose_name='49日龄出栏鸡胸比例（%）')
    JiXiongRate56 = models.FloatField(verbose_name='56日龄出栏鸡胸比例（%）')
    JiChiRate35 = models.FloatField(verbose_name='35日龄出栏鸡翅比例（%）')
    JiChiRate42 = models.FloatField(verbose_name='42日龄出栏鸡翅比例（%）')
    JiChiRate49 = models.FloatField(verbose_name='49日龄出栏鸡翅比例（%）')
    JiChiRate56 = models.FloatField(verbose_name='56日龄出栏鸡翅比例（%）')
    JiTuiRate35 = models.FloatField(verbose_name='35日龄出栏鸡腿比例（%）')
    JiTuiRate42 = models.FloatField(verbose_name='42日龄出栏鸡腿比例（%）')
    JiTuiRate49 = models.FloatField(verbose_name='49日龄出栏鸡腿比例（%）')
    JiTuiRate56 = models.FloatField(verbose_name='56日龄出栏鸡腿比例（%）')
    JiGuJiaRate35 = models.FloatField(verbose_name='35日龄出栏鸡骨架比例（%）')
    JiGuJiaRate42 = models.FloatField(verbose_name='42日龄出栏鸡骨架比例（%）')
    JiGuJiaRate49 = models.FloatField(verbose_name='49日龄出栏鸡骨架比例（%）')
    JiGuJiaRate56 = models.FloatField(verbose_name='56日龄出栏鸡骨架比例（%）')
    JiNeiZangRate35 = models.FloatField(verbose_name='35日龄出栏鸡内脏比例（%）')
    JiNeiZangRate42 = models.FloatField(verbose_name='42日龄出栏鸡内脏比例（%）')
    JiNeiZangRate49 = models.FloatField(verbose_name='49日龄出栏鸡内脏比例（%）')
    JiNeiZangRate56 = models.FloatField(verbose_name='56日龄出栏鸡内脏比例（%）')
    Remark = models.CharField(max_length=64, null=True, blank=True, verbose_name='备注')


class DailyStandardTable(models.Model):
    id = models.AutoField(primary_key=True, verbose_name='序号')
    nDay = models.IntegerField(verbose_name='日次')
    SiTaoRate = models.FloatField(verbose_name='日度死淘率（%）')
    nBirdsType = models.IntegerField(verbose_name='家禽种类')
    Remark = models.CharField(max_length=64, null=True, blank=True, verbose_name='备注')

class WholeParameter(models.Model):
    id = models.AutoField(primary_key=True, verbose_name='序号')
    YuChengPeriod = models.IntegerField(verbose_name='育成期')
    MaxLivePeriod = models.IntegerField(verbose_name='最大生存周期')
    XuanYongRate = models.FloatField(verbose_name='选用率')
    nGeneration = models.IntegerField(verbose_name='代次')
    nBirdsType = models.IntegerField(verbose_name='家禽种类')
    Remark = models.CharField(max_length=64, null=True, blank=True, verbose_name='备注')


class WeekCorrectionFactor(models.Model):
    id = models.AutoField(primary_key=True, verbose_name='序号')
    Year = models.IntegerField(verbose_name='年份')
    WeekNum = models.IntegerField(verbose_name='周度')
    startDate = models.DateField(verbose_name='开始日期')
    endDate = models.DateField(verbose_name='结束日期')
    SiTaoC = models.FloatField(verbose_name='死淘率校正')
    SiTaoCNote = models.CharField(max_length=128,verbose_name='死淘率校正备注')
    ChanDanC = models.FloatField(verbose_name='产蛋率校正')
    ChanDanCNote = models.CharField(max_length=128,verbose_name='产蛋率校正备注')
    RuFuZhongDanC = models.FloatField(verbose_name='入孵种蛋率校正')
    RuFuZhongDanCNote = models.CharField(max_length=128,verbose_name='入孵种蛋率校正备注')
    ShouJingC = models.FloatField(verbose_name='受精率校正')
    ShouJingCNote = models.CharField(max_length=128,verbose_name='受精率校正备注')
    FuHuaC = models.FloatField(verbose_name='孵化率校正')
    FuHuaCNote = models.CharField(max_length=128,verbose_name='孵化率校正备注')
    JianChuC = models.FloatField(verbose_name='健雏率校正')
    JianChuCNote = models.CharField(max_length=128,verbose_name='健雏率校正备注')
    SaleRateC = models.FloatField(verbose_name='销售率校正')
    SaleRateCNote = models.CharField(max_length=128,verbose_name='销售率校正备注')
    nGeneration = models.IntegerField(verbose_name='存储类型')
    nBirdsType = models.IntegerField(verbose_name='家禽种类')
    Remark = models.CharField(max_length=64, null=True, blank=True, verbose_name='备注')

class YearTaotaiJirouParam(models.Model):
    id = models.AutoField(primary_key=True, verbose_name='序号')
    nYear = models.IntegerField(verbose_name='年份',default=2019)
    StandardTZ = models.FloatField(verbose_name='标准体重（kg）')
    TuZaiRate = models.FloatField(verbose_name='屠宰率（%）')
    nGeneration = models.IntegerField(verbose_name='存储类型')
    nBirdsType = models.IntegerField(verbose_name='家禽种类')
    Remark = models.CharField(max_length=64, null=True, blank=True, verbose_name='备注')


class WeekDateStandard(models.Model):
    id = models.AutoField(primary_key=True, verbose_name='序号')
    Year = models.IntegerField(verbose_name='年份')
    WeekNum = models.IntegerField(verbose_name='周度')
    startDate = models.DateField(verbose_name='开始日期')
    endDate = models.DateField(verbose_name='结束日期')
    Remark = models.CharField(max_length=64, null=True, blank=True, verbose_name='备注')


class WeeklyIntroducedMedian(models.Model):
    id = models.AutoField(primary_key=True, verbose_name='序号')
    originYear = models.IntegerField(verbose_name='引种年份',default=0)
    originWeek = models.IntegerField(verbose_name='引种周度',default=0)
    Year = models.IntegerField(verbose_name='年份')
    WeekNum = models.IntegerField(verbose_name='周度')
    startDate = models.DateField(verbose_name='开始日期',null=True,blank=True)
    endDate = models.DateField(verbose_name='结束日期',null=True,blank=True)
    CompanyId = models.IntegerField(verbose_name='公司名',null=True,blank=True)
    SpeciesId = models.IntegerField(verbose_name='品种', default=1,null=True,blank=True)
    feedWayId = models.IntegerField(verbose_name='饲养方式', default=1,null=True,blank=True)
    shengchanWeek = models.IntegerField(verbose_name='生产周编号', default=1,null=True,blank=True)
    TotalYuChengCunLan = models.IntegerField(verbose_name='育成期存栏',null=True,blank=True)
    TotalChanDanCunLan = models.IntegerField(verbose_name='产蛋期存栏',null=True,blank=True)
    TotalDan = models.IntegerField(verbose_name='产蛋数',null=True,blank=True)
    TotalChuJi = models.IntegerField(verbose_name='鸡总数',null=True,blank=True)
    TotalFactSaleChuJi = models.IntegerField(verbose_name='实际销售雏鸡总数',null=True,blank=True)
    TaoTaiJiNum = models.IntegerField(verbose_name='淘汰鸡数目',null=True,blank=True)
    dTaoTaiJiRou = models.FloatField(verbose_name='淘汰鸡肉',null=True,blank=True)
    nGeneration = models.IntegerField(verbose_name='代次',null=True,blank=True)
    nDraftOrOriginal = models.IntegerField(verbose_name='存储类型',null=True,blank=True)
    nBirdsType = models.IntegerField(verbose_name='家禽种类',null=True,blank=True)
    Remark = models.CharField(max_length=64, null=True, blank=True, verbose_name='备注')


class WeeklyIntroducedSumMedian(models.Model):
    id = models.AutoField(primary_key=True, verbose_name='序号')
    originYear = models.IntegerField(verbose_name='引种年份',default=0)
    originWeek = models.IntegerField(verbose_name='引种周度',default=0)
    Year = models.IntegerField(verbose_name='年份')
    WeekNum = models.IntegerField(verbose_name='周度')
    startDate = models.DateField(verbose_name='开始日期',null=True,blank=True)
    endDate = models.DateField(verbose_name='结束日期',null=True,blank=True)
    # CompanyId = models.IntegerField(verbose_name='公司名',null=True,blank=True)
    # SpeciesId = models.IntegerField(verbose_name='品种', default=1,null=True,blank=True)
    # feedWayId = models.IntegerField(verbose_name='饲养方式', default=1,null=True,blank=True)
    shengchanWeek = models.IntegerField(verbose_name='生产周编号', default=1,null=True,blank=True)
    TotalYuChengCunLan = models.BigIntegerField(verbose_name='育成期存栏',null=True,blank=True)
    TotalChanDanCunLan = models.BigIntegerField(verbose_name='产蛋期存栏',null=True,blank=True)
    TotalDan = models.BigIntegerField(verbose_name='产蛋数',null=True,blank=True)
    TotalChuJi = models.BigIntegerField(verbose_name='鸡总数',null=True,blank=True)
    TotalFactSaleChuJi = models.BigIntegerField(verbose_name='实际销售雏鸡总数',null=True,blank=True)
    TaoTaiJiNum = models.BigIntegerField(verbose_name='淘汰鸡数目',null=True,blank=True)
    dTaoTaiJiRou = models.BigIntegerField(verbose_name='淘汰鸡肉',null=True,blank=True)
    nGeneration = models.IntegerField(verbose_name='代次',null=True,blank=True)
    nDraftOrOriginal = models.IntegerField(verbose_name='存储类型',null=True,blank=True)
    nBirdsType = models.IntegerField(verbose_name='家禽种类',null=True,blank=True)
    Remark = models.CharField(max_length=64, null=True, blank=True, verbose_name='备注')

class ZudaiIntroducedFile(models.Model):
    id = models.AutoField(primary_key=True, verbose_name='序号')
    fileName = models.CharField(max_length=64, null=True, blank=True, verbose_name='文件名')
    Remark = models.CharField(max_length=64, null=True, blank=True, verbose_name='备注')

    def __str__(self):
        return self.fileName

